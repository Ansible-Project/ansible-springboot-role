---
- name: "check for java8 install tasks"
  local_action: stat path="{{ role_path }}/tasks/java8_{{ ansible_distribution }}.yml"
  become: no
  register: java8_install_tasks_optional
  ignore_errors: True

- debug: msg="including {{ java8_install_tasks_optional.stat.path }}"
  when: java8_install_tasks_optional.stat.exists

- include: " {{ java8_install_tasks_optional.stat.path }}"
  when: java8_install_tasks_optional.stat.exists

- name: "create spring-boot user"
  user: name={{ spring_boot_username }} comment="user for application {{ spring_boot_application_id }}"

- name: "create spring-boot configuration"
  template: src=application.properties.j2 dest={{ spring_boot_user_dir }}/application-{{ spring_boot_profile}}.properties owner={{ spring_boot_username }} group={{ spring_boot_username }}

- name: "create spring-boot initscript configuration"
  template: src=initscript.conf.j2 dest={{ spring_boot_user_dir }}/{{ spring_boot_application_id}}.conf owner={{ spring_boot_username }} group={{ spring_boot_username }}

- name: "check for spring boot file source inside vm"
  include: "copy_springboot_application.yml"
  when: not (spring_boot_file_source is undefined or spring_boot_file_source is none or spring_boot_file_source | trim == '')

- name: "check for local spring boot file source"
  include: "copy_springboot_application_local.yml"
  when: not (spring_boot_file_source_local is undefined or spring_boot_file_source_local is none or spring_boot_file_source_local | trim == '')

- name: "set spring boot file permissions"
  file: path={{ spring_boot_user_dir }}/{{ spring_boot_file }} owner={{ spring_boot_username }} group={{ spring_boot_username }} mode=0755

- name: "create log directory"
  file: path={{ spring_boot_log_folder }} state=directory owner={{ spring_boot_username }} group={{ spring_boot_username }}

- name: "create link for spring-boot service"
  file: src={{ spring_boot_user_dir }}/{{ spring_boot_file }} dest=/etc/init.d/{{ spring_boot_application_id }} owner={{ spring_boot_username }} group={{ spring_boot_username }} state=link

- name: "enable spring-boot service"
  service: name={{ spring_boot_application_id }} enabled=yes

- name: "start spring-boot service"
  service: name={{ spring_boot_application_id }} state=restarted

- debug: msg="spring-boot application {{ spring_boot_application_id }}"
